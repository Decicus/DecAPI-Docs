base_path: "/twitch"
endpoints:
    - route: ""
      notes:
        - 'Lists the currently available endpoints - <strong>Returns a JSON object</strong>'
    - route: "accountage/:user"
      parameters:
        - name: ":user"
          description: 'The name of the user to retrieve the account age for.'
      qs:
        - name: "precision"
          description: 'How precise the timestamp should be in terms of years, months, weeks, days, hours, minutes & seconds.- Default: <code>2</code>.'
      notes:
        - 'Retrieves the account age of the specified user.'
    - route: "chat_rules/:channel"
      parameters:
        - name: ":channel"
          description: 'The channel name to retrieve the chat rules for.'
      notes:
        - 'Gives a "newlined" list of chat rules for the specified channel.'
    - route: "clusters/:channel"
      parameters:
        - name: ":channel"
          description: 'The channel to check chat cluster for.'
      notes:
        - 'Retrieves the chat cluster name for the channel specified.'
        - 'Note that this is essentially useless from now on, as all requests will (most likely) return <code>aws</code>.'
    - route: "creation/:user"
      parameters:
        - name: ":user"
          description: "The name of the user."
      notes:
        - Retrieves the creation date/time of the specified user.
      qs:
        - name: "format"
          description:
            - 'Formats the date/time based on the <a href="https://secure.php.net/manual/en/function.date.php#refsect1-function.date-parameters">format string</a> specified.'
            - 'Default format: <code>M j. Y - h:i:s A (e)</code>'
          required: false
          type: "string"
        - name: "tz"
          description: 'Specify the timezone that you want the date/time to be displayed as. <a href="https://secure.php.net/manual/en/timezones.php">Click here for valid timezones</a>'
          required: false
          type: "string"
    - route: "emoteslots/:channel"
      parameters:
        - name: ":channel"
          description: 'The name of the channel. Will only be used for reference.'
      qs:
        - name: "subscribers"
          description: 'The amount of subscribers, used for calculating how many subscribers are needed to get the next amount of emote slots.'
          required: true
          type: "int"
    - route: "followage/:channel/:user"
      parameters:
        - name: ":channel"
          description: 'The channel name that will be used as reference for checking the "follow age".'
        - name: ":user"
          description: 'The name of the user that you wish to check the "follow age" for.'
      qs:
        - name: "precision"
          description: 'How precise the timestamp should be in terms of years, months, weeks, days, hours, minutes & seconds.- Default: <code>2</code>.'
          type: "int"
      notes:
        - 'Gets the time difference (also known as the "follow age") between when <code>:user</code> followed <code>:channel</code>'
    - route: "followed/:channel/:user"
      parameters:
        - name: ":channel"
          description: 'The channel name.'
        - name: ":user"
          description: 'The name of the user.'
      notes:
        - 'Retrieves the date and time of when the user followed the channel.'
        - 'Example format: <code>Mar 13. 2016 - 07:31:29 PM (UTC)</code>'
    - route: "followers/:channel"
      parameters:
        - name: ":channel"
          description: 'The channel name of the channel you wish to retrieve followers for.'
      qs:
        - name: "count"
          description: 'How many followers to get with the request. Default: <code>1</code>. Max: <code>100</code>.'
          type: "int"
        - name: "offset"
          description: 'How many followers to offset from the beginning of the object.'
          type: "int"
        - name: "direction"
          description: "What direction to retrieve followers in. Can either be 'asc' or 'desc'. Default: <code>desc</code>."
          type: "string"
        - name: "num"
          description: "Prefixes each follower with a number."
          type: "none"
      notes:
        - 'Lists the most recent follower(s) a channel has.'
    - route: "game/:channel"
      parameters:
        - name: ":channel"
          description: "The channel name."
      notes:
        - 'Retrieves the current game the channel has been set to.'
    - route: "help/:search"
      parameters:
        - name: ":search"
          description: 'The string to search for in the titles of the help articles.'
      qs:
        - name: "list"
          description: 'If this is specified at all, a list of available help articles will be returned instead.'
      notes:
        - 'Allows you to search help article titles and return the full title + URL.'
        - '<strong>JSON results are supported for most requests</strong> (search + help articles).'
    - route: "highlight/:channel"
      parameters:
        - name: ":channel"
          description: 'The channel name.'
      notes:
        - 'Retrieves the latest "highlight" of the specified channel.'
    - route: "hosts/:channel"
      parameters:
        - name: ":channel"
          description: 'The channel name.'
      qs:
        - name: "display_name"
          description: 'If specified, this will use the display names instead of the usernames of the users that are hosting.'
        - name: "list"
          description: 'If specified, the list will be in plaintext (using newlines) instead of in a JSON object.'
        - name: "implode"
          description: 'If specified, the list will be returned comma-separated (", ") instead of JSON/a "newlined" list.'
        - name: "limit"
          description: "If specified, the list will be comma-separated up until the maximum 'limit' of channels. Example: If 10 channels are hosting you, and the limit is set to '2', then it will for example say: decicus, mellow and 8 others"
      notes:
        - 'Returns a list of channel names hosting the specified channel.'
        - '<strong>JSON results are returned by default. See <code>list/implode</code> query string.</strong>.'
    - route: "hostscount/:channel"
      parameters:
        - name: ":channel"
          description: 'The channel name.'
      notes:
        - 'This will return the <strong>channel count</strong> of how many channels are currently hosting the <i>specified channel</i>.'
    - route: "id/:user"
      parameters:
        - name: ":user"
          description: 'The name of the user.'
      notes:
        - 'Returns the Twitch user ID of the specified user (if valid).'
    - route: "ingests"
      notes:
        - 'Returns a formatted list of available ingest servers.'
    - route: "multi/:streams"
      parameters:
        - name: ":streams"
          description: 'A space-separated list of streams to generate a multi link with.'
      qs:
        - name: "streams"
          description: 'Can be used as an alternative to the <code>:streams</code> route parameter.'
        - name: "service"
          description: 'Chooses which multistream service you want to use. Specify something bogus for this parameter to get a list of available services. Default: <code>multistream</code>.'
      notes:
        - 'Generates a "multi stream" URL based on the channel names passed to it.'
        - 'While the <code>streams</code> <strong>query</strong> parameter is optional, you have to specify the streams as <strong>either</strong> a <strong>route</strong> parameter or as the <code>streams</code> <strong>query</strong> parameter.'
    - route: "random_sub"
      qs:
        - name: "token"
          required: true
          description: 'The OAuth token belonging to the channel owner with the <code>channel_subscriptions</code> scope.'
        - name: "count"
          description: "The amount of subscribers to retrieve - Default: <code>1</code>."
          type: "int"
        - name: "field"
          description: 'What field from the user object to retrieve. See <a href="https://dev.twitch.tv/docs/v5/reference/channels/#get-channel-subscribers">Twitch API docs</a> to see which ones are available. Default: <code>name</code>.'
        - name: "separator"
          description: 'What character(s) should separate each subscriber value from each other. Default: <code>, </code>.'
      notes:
        - 'Retrieves a random subscriber from the channel, based on their OAuth (authentication) token.'
        - 'If you need to retrieve an OAuth token, you can use <a href="https://decicus.github.io/twitch-oauth-token/#channel_subscriptions">another project of mine</a>.'
    - route: "random_user/:channel"
      parameters:
        - name: ":channel"
          description: "The channel to retrieve the logged in users from."
      qs:
        - name: "exclude"
          description: 'A comma-separated list of <strong>users</strong> you wish to ignore.'
        - name: "ignore"
          description: 'A comma-separated list of <strong>groups</strong> you wish to ignore. These groups are the specific user types. Currently that means the following: <code>moderators, staff, admins, global_mods, viewers</code>.'
      notes:
        - 'Retrieves a list of users that are <strong>currently logged into chat</strong> in the specified channel, then picks one of them randomly.'
    - route: "subcount/:channel"
      parameters:
        - name: ":channel"
          description: "The channel name."
      notes:
        - 'Retrieves the subscriber count of the specified channel.'
        - '<strong>This only works for channels that have <a href="{{baseUrl}}/auth/twitch?scopes=user_read+channel_subscriptions&redirect=subcount" target="_blank" rel="noopener noreferrer">authenticated and authorized</a> this app</strong>.'
    - route: "subscriber_emotes/:channel"
      parameters:
        - name: ":channel"
          description: 'The channel name.'
      notes:
        - 'Retrieves the subscriber emotes for the specified channels and lists them (space-separated).'
        - '<strong>JSON results are supported</strong>.'
    - route: "status/:channel"
      parameters:
        - name: ":channel"
          description: 'The channel name.'
      notes:
        - 'Retrieves the current title set on the channel.'
    - route: "team_members/:team_id"
      parameters:
        - name: ":team_id"
          description: 'The team identifier.'
      qs:
        - name: "sort"
          description: 'If this is specified, it will sort the members of the team alphabetically.<br><strong>Recommended for a consistent list between requests.</strong>'
        - name: "text"
          description: 'If this is specified, the list will be returned in plaintext compared to a JSON array.'
        - name: "implode"
          description: 'Works similarly to <code>text</code>.<br />
          Specify the text that should separate each team member in a plaintext response. This is an alternative to having a list of members separated by a newline.<br />
          If this is specified, specifying the <code>text</code> query string is not necessary as that will already be implied.'
      notes:
        - 'Retrieves the members of a specified team.'
        - 'The team identifier is the identifier used in URLs. Example: The team "New Game Plus" has the identifier "newgameplus".'
        - '<strong>JSON results are returned by default. See <code>text</code> or <code>implode</code> query string.</strong>.'
    - route: "title/:channel"
      parameters:
        - name: ":channel"
          description: "The channel name."
      notes:
        - 'Works identical to <code>status</code> - Retrieves the current title set on the channel.'
    - route: "total_views/:channel"
      parameters:
        - name: ":channel"
          description: "The channel name."
      notes:
        - 'Displays the "total views" a channel has.'
    - route: "upload/:channel"
      parameters:
        - name: ":channel"
          description: "The channel name."
      notes:
        - 'Returns the latest uploaded video (title + URL) for the specified channel.'
    - route: "uptime/:channel"
      parameters:
        - name: ":channel"
          description: "The channel name."
      qs:
        - name: "precision"
          description: 'How precise the timestamp should be in terms of days, hours, minutes & seconds - Default: 4.'
      notes:
        - 'Returns how long the specified channel has been live for the current broadcast.'
        - '<strong>Rate-limited:</strong> This is rate-limited to 100 requests per minute.'
    - route: "viewercount/:channel"
      parameters:
        - name: ":channel"
          description: "The channel name."
      notes:
        - 'Returns how many viewers the channel has, if they are currently streaming.'
        - 'Keep in mind this might be slightly inaccurate, due to caching on the Twitch API side.'
